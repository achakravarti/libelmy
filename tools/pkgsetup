#!/bin/sh

. "$(dirname "0")/../external/shflags/shflags"
. "$(dirname "0")/../tools/msg.sh"
. "$(dirname "0")/../tools/os.sh"
. "$(dirname "0")/../tools/su.sh"
. "$(dirname "0")/../tools/pkg.sh"
. "$(dirname "0")/../tools/srv.sh"


# -t,--target (default arch)
# -p,--pandoc (default true)
# -u,--update (default true)
# -c,--check (default true)
#
# ./pkgsetup --target arch --pandoc --update --check


# MAIN FUNCTIONS


main_flags()
{
        DEFINE_boolean 'upgrade' false 'upgrade package manager' 1001
        DEFINE_boolean 'check' true 'support check tools' 1002
        DEFINE_boolean 'man' true 'support manpage tools' 1003

        FLAGS "$@" || exit $?
        eval set -- "$FLAGS_ARGV"
}


main_exec()
{
        if [ "$FLAGS_upgrade" -eq "$FLAGS_FALSE" ]; then
                mgs_warn '--noupdgrade set, skipping upgrade'
        else
                pkg_upgrade
        fi

        case "$OS_DISTRO" in
        Arch)
                arch_setup;;

        *)
                msg_fail 'unsupported OS distribution';;
        esac
}


# ARCH LINUX FUNCTIONS


arch_setup()
{
        pkg_install base-devel
        pkg_install postgresql
        pkg_install postgresql-libs
        pkg_rsyslog

        if [ "$FLAGS_check" -eq "$FLAGS_FALSE" ]; then
                msg_warn '--nocheck set, skipping support for check tools'
        else
                pkg_install valgrind
                pkg_install criterion
        fi

        if [ "$FLAGS_man" -eq "$FLAGS_FALSE" ]; then
                msg_warn '--noman set, skipping support for man pages'
        else
                pkg_install pandoc
        fi

        _pgdir=/var/lib/postgres/data
        msg_info 'checking postgres cluster'

        if ! [ -d "$_pgdir" ]; then
                $SU -u postgres initdb          \
                    --locale=en_US.UTF-8        \
                    --encoding=UTF8             \
                    -D "$_pgdir"                \
                    || msg_fail 'failed to initialise postgres cluster'
        fi

        srv_enable postgresql.service
        msg_ok 'postgres cluster initialised'
}


# MAIN ENTRY POINT


main_flags "$@"
main_exec "$@"
