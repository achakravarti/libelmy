#!/bin/sh

. "$(dirname "0")/../external/shflags/shflags"
. "$(dirname "0")/../tools/os.sh"
. "$(dirname "0")/../tools/msg.sh"


# -b,--bin (default true)
# -c,--check (default true)
# -d,--database (default true)
# -f,--force (default false)
# -m,--man (default true)
# -r,--release (default false)
# -u,--update (default true)


export OS


# MAIN FUNCTIONS


main_flags()
{
        DEFINE_boolean 'man' true 'generate man pages' 'm'
        DEFINE_boolean 'update' true 'update package manager' 'u'
        DEFINE_boolean 'check' true 'support check tools' 'c'
        DEFINE_boolean 'database' true 'generate database' 'd'
        DEFINE_boolean 'release' false 'build for release' 'r'
        DEFINE_boolean 'force' false 'force regeneration' 'f'

        FLAGS "$@" || exit $?
        eval set -- "$FLAGS_ARGV"
}


main_exec()
{
        msg_info "detecting OS"

        os_query

        _cmd="./pkgsetup -t $OS_DISTRO"
        [ "$FLAGS_update" -eq "$FLAGS_FALSE" ] && _cmd="_cmd --noupdate"
        [ "$FLAGS_check" -eq "$FLAGS_FALSE" ] && _cmd="_cmd --nocheck"
        [ "$FLAGS_man" -eq "$FLAGS_FALSE" ] && _cmd="_cmd --nopandoc"
        eval "$_cmd"

        if [ "$FLAGS_database" -eq "$FLAGS_TRUE" ]; then
                if [ "$FLAGS_force" -eq "$FLAGS_TRUE" ]; then
                        ./dbsetup --reset
                else
                        ./dbsetup
                fi
        fi

        _cmd=./mksetup
        [ "$FLAGS_check" -eq "$FLAGS_FALSE" ] && _cmd="_cmd --nocheck"
        [ "$FLAGS_man" -eq "$FLAGS_FALSE" ] && _cmd="_cmd --noman"
        [ "$FLAGS_release" -eq "$FLAGS_TRUE" ] && _cmd="_cmd --nodebug"
        [ "$FLAGS_force" -eq "$FLAGS_TRUE" ] && _cmd="_cmd --force"
        eval "$_cmd"
}


# MAIN ENTRY POINT


main_flags "$@"
main_exec
